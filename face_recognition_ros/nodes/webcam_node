#!/usr/bin/env python2

import cv2

import rospy as ros
from sensor_msgs.msg import Image
from cv_bridge import CvBridge, CvBridgeError
from face_recognition_ros.utils import config

URL = "rtsp://192.168.1.67:8080/h264_pcm.sdp"


def main():

    ros.init_node("camera")

    config.load_config()

    bridge = CvBridge()
    image_pub = ros.Publisher("/camera", Image, queue_size=1)

    cap = cv2.VideoCapture(0)
    # cap = cv2.VideoCapture(URL)

    rate = ros.Rate(30)

    while not ros.is_shutdown():

        ret, frame = cap.read()
        if ret:
            try:
                img_mss = bridge.cv2_to_imgmsg(frame, "bgr8")
                image_pub.publish(img_mss)
            except CvBridgeError as e:
                print(e)

            # log.info("[camera] Image sent.")
            rate.sleep()

    ros.spin()


if __name__ == "__main__":
    main()
